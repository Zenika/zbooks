<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zenika.zbooks.persistence.ZBooksMapper">

    <!-- Mapping ZBooks -->
    <resultMap type="ZBook" id="ZBook">
        <id column="book_id" property="id"/>
        <result column="ISBN" property="ISBN"/>
        <result column="author" property="authors"/>
        <result column="edition" property="edition"/>
        <result column="title" property="title"/>
        <result column="pagesNumber" property="pagesNumber"/>
        <result column="releaseDate" property="releaseDate"/>
        <result column="language" property="language"/>
        <result column="cover" property="cover"/>
        <result column="borrowed" property="borrowed"/>
        <result column="zCollection" property="zCollection" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"/>
    </resultMap>

    <!-- ************************************************************************************* -->


    <select id="getBook" resultMap="ZBook" parameterType="int" timeout="10">
        SELECT
            DISTINCT(z.book_id),
            z.ISBN,
            z.author,
            z.edition,
            z.title,
            z.pagesNumber,
            z.releaseDate,
            z.language,
            z.cover,
            z.zCollection,
            zb.book_borrowed_id IS NOT NULL AND zb.return_date IS NULL as borrowed
        FROM zBooks as z
            LEFT OUTER JOIN zbooks_borrowed zb
                ON zb.idBook=z.book_id AND zb.book_borrowed_id = (SELECT MAX(book_borrowed_id) FROM zbooks_borrowed)
        WHERE book_id = #{id}
    </select>

    <select id="getBooks" resultMap="ZBook" timeout="10">
    	SELECT 
    		z.book_id,
            z.ISBN,
            z.author,
            z.edition,
            z.title,
            z.pagesNumber,
            z.releaseDate,
            z.language,
            z.cover,
            z.zCollection
    		FROM zBooks z
    </select>

    <select id="getNumberOfBooks" resultType="int" timeout="10">
        SELECT
            COUNT(*)
        FROM zBooks z
    </select>

    <insert id="addBook" parameterType="ZBook" timeout="10">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID() as book_id
        </selectKey>
        INSERT INTO
        zBooks (ISBN, title, author, edition, pagesNumber, releaseDate, language, cover, zCollection)
        VALUES
        (#{ISBN}, #{title}, #{authors}, #{edition}, #{pagesNumber}, #{releaseDate}, #{language}, #{cover}, #{zCollection.ordinal})
    </insert>

    <delete id="deleteBook" parameterType="int" timeout="10">
		DELETE FROM zBooks WHERE book_id = #{id}
	</delete>

    <update id="updateBook" parameterType="ZBook" timeout="10">
		UPDATE zBooks
		SET ISBN=#{ISBN},title=#{title},author=#{authors},edition=#{edition},pagesNumber=#{pagesNumber},releaseDate=#{releaseDate},language=#{language},cover=#{cover},zCollection=#{zCollection.ordinal}
		WHERE book_id=#{id}
	</update>


    <insert id="borrowBook" parameterType="map" timeout="10">
        INSERT INTO
            zBooks_borrowed (idBook, idBorrower, borrow_date)
            VALUES
            (#{book.id},#{user.id}, SYSDATE())
    </insert>

    <update id="returnBook" parameterType="ZBook" timeout="10">
        UPDATE zBooks_borrowed
        SET return_date=SYSDATE()
        WHERE idBook=#{id}
    </update>
</mapper>